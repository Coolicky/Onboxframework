<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:Onbox.Mvc.V4.CustomControls"
                    xmlns:c="clr-namespace:Onbox.Mvc.V4.Converters"
                    xmlns:local="clr-namespace:Onbox.Mvc.V4">
    <Style TargetType="{x:Type local:Spinner}">
        <Setter Property="UseLayoutRounding"
                Value="False" />
        <Setter Property="RenderOptions.BitmapScalingMode"
                Value="HighQuality" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Spinner}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Name="spinner"
                                    x:Key="spinner"
                                    RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="canvas"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="0" />
                                <EasingDoubleKeyFrame KeyTime="00:00:00.5000000"
                                                      Value="180" />
                                <EasingDoubleKeyFrame KeyTime="00:00:01"
                                                      Value="359" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <StackPanel VerticalAlignment="Center"
                                x:Name="Host">
                        <Canvas x:Name="canvas"
                                Height="24"
                                Width="24"
                                RenderTransformOrigin="0.5,0.5">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path Data="F1 M 10.000,2.918 C 6.123,2.918 2.964,6.050 2.920,9.917 L 0.002,9.917 C 0.046,4.441 4.514,0.000 10.000,0.000 C 15.487,0.000 19.954,4.441 19.999,9.917 L 17.080,9.917 C 17.036,6.050 13.878,2.918 10.000,2.918 Z"
                                  UseLayoutRounding="False"
                                  Canvas.Top="1.932"
                                  Canvas.Left="1.937">
                                <Path.Fill>
                                    <LinearGradientBrush MappingMode="Absolute"
                                                         StartPoint="399.906,240.414"
                                                         EndPoint="419.903,240.414">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.5"
                                                          Color="{Binding Path=Color1, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            <GradientStop Offset="1.00"
                                                          Color="{Binding Path=Color3, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </LinearGradientBrush.GradientStops>
                                        <LinearGradientBrush.Transform>
                                            <MatrixTransform Matrix="-1.000,0.000,0.000,-1.000,419.905,245.373" />
                                        </LinearGradientBrush.Transform>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path Data="F1 M 17.080,9.917 C 17.080,9.945 17.083,9.972 17.083,10.000 C 17.083,13.904 13.905,17.082 10.000,17.082 C 6.095,17.082 2.917,13.904 2.917,10.000 C 2.917,9.972 2.920,9.945 2.920,9.917 L 0.002,9.917 C 0.002,9.945 0.000,9.972 0.000,10.000 C 0.000,15.514 4.485,20.000 10.000,20.000 C 15.514,20.000 20.000,15.514 20.000,10.000 C 20.000,9.972 19.999,9.945 19.999,9.917 L 17.080,9.917 Z"
                                  UseLayoutRounding="False"
                                  Canvas.Top="1.932"
                                  Canvas.Left="1.937">
                                <Path.Fill>
                                    <LinearGradientBrush MappingMode="Absolute"
                                                         StartPoint="489.491,230.414"
                                                         EndPoint="509.491,230.414">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.00"
                                                          Color="{Binding Path=Color2, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            <GradientStop Offset="0.5"
                                                          Color="{Binding Path=Color1, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </LinearGradientBrush.GradientStops>
                                        <LinearGradientBrush.Transform>
                                            <MatrixTransform Matrix="1.000,0.000,-0.000,-1.000,-489.491,245.373" />
                                        </LinearGradientBrush.Transform>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                        </Canvas>
                        <TextBlock Margin="0,4,0,0"
                                   Text="{TemplateBinding Text}"
                                   HorizontalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard Storyboard="{StaticResource spinner}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsLoading}"
                         Value="False">
                <Setter Property="Opacity"
                        Value="0" />
                <Setter Property="Width"
                        Value="0" />
                <Setter Property="Height"
                        Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:SpinnerDashed}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ControlTemplate.Resources>
                        <Storyboard x:Name="spinner"
                                    x:Key="spinner"
                                    RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="canvas"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="0" />
                                <EasingDoubleKeyFrame KeyTime="00:00:02"
                                                      Value="360" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard Storyboard="{StaticResource spinner}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                    <StackPanel VerticalAlignment="Center">
                        <Canvas x:Name="canvas"
                                Height="24"
                                Width="24"
                                RenderTransformOrigin="0.5,0.5">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Ellipse Fill="Transparent"
                                     StrokeThickness="4"
                                     StrokeDashArray="2"
                                     StrokeDashCap="Triangle"
                                     Height="24"
                                     Width="24">
                                <Ellipse.Stroke>
                                    <SolidColorBrush Color="{Binding Path=Color1, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </Ellipse.Stroke>
                            </Ellipse>
                        </Canvas>
                        <TextBlock Margin="0,4,0,0"
                                   Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   HorizontalAlignment="Center" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsLoading}"
                         Value="False">
                <Setter Property="Opacity"
                        Value="0" />
                <Setter Property="Width"
                        Value="0" />
                <Setter Property="Height"
                        Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:LoadingLine}">
        <Setter Property="Color1"
                Value="#0696d7" />
        <Setter Property="Color2"
                Value="Transparent" />
        <Setter Property="Color3"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LoadingLine}">
                    <Grid>
                        <Border VerticalAlignment="Top"
                                Height="2">
                            <Border.Background>
                                <LinearGradientBrush>
                                    <GradientStop x:Name="C1"
                                                  Color="{Binding Color2, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    <GradientStop x:Name="C2"
                                                  Color="{Binding Color1, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    <GradientStop x:Name="C3"
                                                  Color="{Binding Color2, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Storyboard.TargetName="C3"
                                                             Storyboard.TargetProperty="Offset"
                                                             From="-1"
                                                             To="2"
                                                             Duration="0:0:1.5" />
                                            <DoubleAnimation Storyboard.TargetName="C2"
                                                             Storyboard.TargetProperty="Offset"
                                                             From="-1.5"
                                                             To="1.5"
                                                             Duration="0:0:1.5" />
                                            <DoubleAnimation Storyboard.TargetName="C1"
                                                             Storyboard.TargetProperty="Offset"
                                                             From="-2"
                                                             To="1"
                                                             Duration="0:0:1.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>
                        <TextBlock Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsLoading}"
                         Value="False">
                <Setter Property="Opacity"
                        Value="0" />
                <Setter Property="Width"
                        Value="0" />
                <Setter Property="Height"
                        Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:WarningStack}">
        <Setter Property="Background"
                Value="Firebrick" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WarningStack}">
                    <Grid Background="{TemplateBinding Background}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          MaxHeight="110">
                        <TextBlock  Text=" x  "
                                    TextAlignment="Right"
                                    VerticalAlignment="Top"
                                    Cursor="Hand"
                                    ToolTip="Dismiss"
                                    x:Name="PART_BTNCLOSE" />
                        <DockPanel HorizontalAlignment="Center"
                                   Focusable="False"
                                   IsHitTestVisible="False"
                                   Margin="0,0,0,4">
                            <TextBlock Height="auto"
                                       Foreground="{TemplateBinding Foreground}"
                                       TextWrapping="Wrap"
                                       TextAlignment="Justify"
                                       TextTrimming="CharacterEllipsis"
                                       Text="{Binding DataContext.Warning}" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.Warning}"
                         Value="{x:Null}">
                <Setter Property="Opacity"
                        Value="0" />
                <Setter Property="Width"
                        Value="0" />
                <Setter Property="Height"
                        Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:MessageStack}">
        <Setter Property="Background"
                Value="#5a8a2d" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MessageStack}">
                    <Grid Background="{TemplateBinding Background}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          MaxHeight="110">
                        <TextBlock  Text=" x  "
                                    TextAlignment="Right"
                                    VerticalAlignment="Top"
                                    Cursor="Hand"
                                    ToolTip="Dismiss"
                                    x:Name="PART_BTNCLOSE" />
                        <DockPanel HorizontalAlignment="Center"
                                   Focusable="False"
                                   IsHitTestVisible="False"
                                   Margin="0,0,0,4">
                            <TextBlock Height="auto"
                                       Foreground="{TemplateBinding Foreground}"
                                       TextWrapping="Wrap"
                                       TextAlignment="Justify"
                                       TextTrimming="CharacterEllipsis"
                                       Text="{Binding DataContext.Message}" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.Message}"
                         Value="{x:Null}">
                <Setter Property="Opacity"
                        Value="0" />
                <Setter Property="Width"
                        Value="0" />
                <Setter Property="Height"
                        Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type cc:EmptyButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:EmptyButton}">
                    <Border>
                        <Border BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Background="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Padding="{Binding Padding, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <ContentPresenter />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:ColorPicker}">
        <Setter Property="Height"
                Value="23" />
        <Setter Property="Width"
                Value="23" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorPicker}">
                    <Border Background="{Binding Color, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={c:HtmlToBrushConverter}, FallbackValue=Transparent}"
                            BorderThickness="1"
                            BorderBrush="Black"
                            x:Name="PART_BORDER"></Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="PART_BORDER"
                                    Property="BorderBrush"
                                    Value="#0078d7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:ImgToggleButton}">
        <Setter Property="Width"
                Value="23" />
        <Setter Property="Height"
                Value="23" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="RenderOptions.BitmapScalingMode"
                Value="NearestNeighbor" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImgToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Image Source="{Binding Source, ElementName=PART_UNCHECKED, Converter={c:BitmapSourceGrayscaleConverter}}"
                                   x:Name="PART_DISABLED_UNCHECKED"
                                   Width="16"
                                   Height="16"
                                   Opacity="0"></Image>
                            <Image Source="{Binding Source, ElementName=PART_CHECKED, Converter={c:BitmapSourceGrayscaleConverter}}"
                                   x:Name="PART_DISABLED_CHECKED"
                                   Width="16"
                                   Height="16"
                                   Opacity="0"></Image>
                            <Image Source="{Binding Image, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={c:BitmapSourceCheckToUnchekedConverter}}"
                                   x:Name="PART_CHECKED"
                                   Width="16"
                                   Height="16"
                                   Opacity="0"></Image>
                            <Image Source="{Binding Image, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   x:Name="PART_UNCHECKED"
                                   Width="16"
                                   Height="16"
                                   Opacity="1"></Image>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#d8e6f2" />
                            <Setter Property="BorderBrush"
                                    Value="#c0dcf3" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="PART_UNCHECKED"
                                    Property="Opacity"
                                    Value="0" />
                            <Setter TargetName="PART_CHECKED"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"
                                           Value="True" />
                                <Condition Property="HighlightBackgroundWhenChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background"
                                        Value="#c0dcf3" />
                                <Setter Property="BorderBrush"
                                        Value="#90c8f6" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="PART_UNCHECKED"
                                    Property="Opacity"
                                    Value="0" />
                            <Setter TargetName="PART_CHECKED"
                                    Property="Opacity"
                                    Value="0" />
                            <Setter TargetName="PART_DISABLED_UNCHECKED"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False"></Condition>
                                <Condition Property="IsChecked"
                                           Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_DISABLED_UNCHECKED"
                                        Property="Opacity"
                                        Value="0" />
                                <Setter TargetName="PART_DISABLED_CHECKED"
                                        Property="Opacity"
                                        Value="1" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False"></Condition>
                                <Condition Property="IsChecked"
                                           Value="True"></Condition>
                                <Condition Property="HighlightBackgroundWhenChecked"
                                           Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background"
                                        Value="#f3f3f3" />
                                <Setter Property="BorderBrush"
                                        Value="#c8c8c8" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
